(function() {

	function LinkedList() {
		this.head = null;
		this.tail = null;
	};

	function LinkedNode(value, next, prev) {
		this.value = value;
		this.next = next;
		this.prev = prev || null;
	};

	LinkedList.prototype.addToHead = function(value) {
		var newNode = new LinkedNode(value, this.head, null);

		if(this.head) {
			this.head.prev = newNode;
		} else {
			this.tail = newNode;
		}

		this.head = newNode;
	};

	LinkedList.prototype.addToTail = function(value) {
		var newNode = new LinkedNode(value, null, this.tail);

		if(this.tail) {
			this.tail.next = newNode;
		} else {
			this.head = newNode;
		}

		this.tail = newNode;
	};

	LinkedList.prototype.removeHead = function(value) {
		if(!this.head) return null;
		var val = this.head.value;
		this.head = this.head.next;
		if(this.head) this.head.prev = null;
		else this.tail = null;
		return val;
	};

	LinkedList.prototype.search = function(value) {

		if(!this.head) {
			return null;
		} else {
			var currentNode = this.head;
			while(currentNode) {
				if(currentNode.value === value) return currentNode.value;
				currentNode = currentNode.next;
			}
			return null;
		}
		
	};

})()